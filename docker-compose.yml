version: '2'

volumes:
  data:
    driver: local

services:
  # src:                                                          # prod only
  #   image: ${COMPOSE_PROJECT_NAME}-src                          # prod only
  #   volumes:                                                    # prod only
  #     - "/src"                                                  # prod only
  #   command: ["true"]                                           # prod only

  elasticsearch:
    build:                                                        # dev only
        context: ./docker/elasticsearch                           # dev only
        dockerfile: Dockerfile                                    # dev only
    image: ${COMPOSE_PROJECT_NAME}-elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      pack.security.enabled: "false"
      xpack.monitoring.enabled: "false"
      xpack.graph.enabled: "false"
      xpack.watcher.enabled: "false"
    volumes:
      - "data:/usr/share/elasticsearch/data"
    ports:
      - "127.0.0.1:9200:9200"


  logstash:
    build:                                                        # dev only
        context: ./docker/logstash                                # dev only
        dockerfile: Dockerfile                                    # dev only
    image: ${COMPOSE_PROJECT_NAME}-logstash
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./docker/logstash/config:/etc/logstash/conf.d             # dev only
      - ./docker/logstash/docker-entrypoint.sh:/docker-entrypoint.sh # dev only
      - "./.env-files:/.env-files"
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch


  kibana:
    build:                                                        # dev only
        context: ./docker/kibana                                  # dev only
        dockerfile: Dockerfile                                    # dev only
    image: ${COMPOSE_PROJECT_NAME}-kibana
    volumes:
      - ./docker/kibana/config/:/etc/kibana/                      # dev only
      - "./.env-files:/.env-files"
    ports:
      # - "127.0.0.1:5601:5601"                                   # prod only
      - "127.0.0.1:5601:5601"                                     # dev only
    depends_on:
      - elasticsearch

  curator:
    build:                                                        # dev only
        context: ./docker/curator                                  # dev only
        dockerfile: Dockerfile                                    # dev only
    image: ${COMPOSE_PROJECT_NAME}-curator
    volumes:
      - ./docker/curator/docker-entrypoint.sh/:/docker-entrypoint.sh  # dev only
      - ./docker/curator/config/:/config                              # dev only
      - "./.env-files:/.env-files"
    depends_on:
      - elasticsearch

  backup:
    build:                                                        # dev only
        context: ./docker/backup                                  # dev only
        dockerfile: Dockerfile                                    # dev only
    image: ${COMPOSE_PROJECT_NAME}-backup
    volumes_from:
      - elasticsearch
    env_file: .env
    volumes:
      - "./.env-files/id_rsa:/home/myvertis/.ssh/id_rsa"
      - "./.env-files/id_rsa.pub:/home/myvertis/.ssh/id_rsa.pub"
      - "./.env-files/known_hosts:/home/myvertis/.ssh/known_hosts"
      - "./docker/backup/start-cron:/usr/sbin/start-cron"          # dev only
      - "./docker/backup/docker-entrypoint.sh:/docker-entrypoint.sh"          # dev only
      - "./test.sh:/test.sh"                                       # dev only
    command: start-cron --user myvertis "\6 \20 \* \* \* bash /backup.sh >> /var/log/cron.log 2>&1"
