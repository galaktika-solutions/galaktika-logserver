version: '2.2'

volumes:
  data:
    driver: local
  backup:
    driver: local


services:
  elasticsearch:
    image: ${REGISTRY_URL}/${REGISTRY_PREFIX}/${COMPOSE_PROJECT_NAME}-elasticsearch:${REGISTRY_TAG}
    volumes:
      - "data:/usr/share/elasticsearch/data"
      - "backup:/mount/backups/my_backup"
    ports:
      - "127.0.0.1:9200:9200"
    # healthcheck:
    #   test: ['CMD', 'curl', '-f', '-u', 'elastic:changeme', 'http://localhost:9200']


  logstash:
    image: ${REGISTRY_URL}/${REGISTRY_PREFIX}/${COMPOSE_PROJECT_NAME}-logstash:${REGISTRY_TAG}
    command: -f /etc/logstash/conf.d/
    volumes:
      - "./.env-files:/.env-files"
    ports:
      - "5000:5000"
      # - "514:514/udp"
      # - "1025:1025/udp"
      # - "1026:1026/udp"

  kibana:
    image: ${REGISTRY_URL}/${REGISTRY_PREFIX}/${COMPOSE_PROJECT_NAME}-kibana:${REGISTRY_TAG}
    # depends_on:
    #   elasticsearch:
    #     condition: service_healthy
    ports:
      - "5601:5601"


  # curator:
  #   image: ${REGISTRY_URL}/${REGISTRY_PREFIX}/${COMPOSE_PROJECT_NAME}-cron:${REGISTRY_TAG}
  #   volumes_from:
  #     - elasticsearch
  #   env_file: .env
  #   volumes:
  #       - "./.env-files:/.env-files"
  #   entrypoint: ./curator-docker-entrypoint.sh
  #   command: start-cron --user curator "${CURATOR_CRON}"
  #
  # backup:
  #   image: ${REGISTRY_URL}/${REGISTRY_PREFIX}/${COMPOSE_PROJECT_NAME}-cron:${REGISTRY_TAG}
  #   volumes_from:
  #     - elasticsearch
  #   env_file: .env
  #   volumes:
  #     - "./.env:/.env"
  #     - "./.env-files/id_rsa:/home/myvertis/.ssh/id_rsa"
  #     - "./.env-files/id_rsa.pub:/home/myvertis/.ssh/id_rsa.pub"
  #     - "./.env-files/known_hosts:/home/myvertis/.ssh/known_hosts"
  #   entrypoint: ./backup-docker-entrypoint.sh
  #   command: start-cron --user myvertis "${BACKUP_CRON}"
  #   depends_on:
  #     - elasticsearch
