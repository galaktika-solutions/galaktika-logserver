input {
  beats {
    port => 5000
    ssl => true
    ssl_certificate_authorities => ["/.env-files/ca.crt"]
    ssl_certificate => "/certificate.crt"
    ssl_key => "/certificate.key"
    ssl_verify_mode => "force_peer"
  }
  udp {
    port => 1025
    type => "cisco-asa"
  }
  udp {
    port => 1026
    type => "qualysoft-asa"
  }
  udp {
    port => 514
    type => "switch"
  }
}

filter {
  if [type] == "sudo" {
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_PUB_LOGIN}"]
      add_tag => ["ssh_successful_login", "ssh_pub_login", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_PASSWORD_LOGIN}"]
      add_tag => ["ssh_successful_login", "ssh_password_login", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_FAILED_LOGIN}"]
      add_tag => ["ssh_failed_login", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_DISCONNECT}"]
      add_tag => ["ssh_disconnect", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_SNOOPY}"]
      add_tag => ["ssh_snoopy", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SUDO}"]
      add_tag => ["sudo_command"]
      remove_field => [ "@version", "input_type", "beat" ]
    }


    if "ssh_parse" not in [tags] {
      grok {
        patterns_dir => "/opt/patterns"
        match   => ["message", "%{AUTH_LOG_LINE}"]
        remove_field => [ "@version", "input_type", "beat" ]
      }
    }

    mutate {
      remove_tag => ["ssh_parse", "_grokparsefailure"]
    }
  }
  else {
    json {
      source => "message"
      remove_field => [ "@version", "input_type", "beat" ]
    }
  }
  if [type] == "cisco-asa" {
  }
  if [type] == "qualysoft-asa" {
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "changeme"
  }
}
