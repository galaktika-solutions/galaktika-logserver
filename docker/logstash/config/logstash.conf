input {
  beats {
    port => 5000
    ssl => true
    ssl_certificate_authorities => ["/.env-files/ca.crt"]
    ssl_certificate => "/certificate.crt"
    ssl_key => "/certificate.key"
    ssl_verify_mode => "force_peer"
  }
}

filter {
  if [type] == "sudo" {
    grok { match => { 'message' => '%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME} %{WORD:program}%{GREEDYDATA:msgsplit}' }
    }
    grok {
       match => { 'msgsplit' => '(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}' }
       remove_field => [ "msgsplit" ]
    }
    grok {
      match => {
        'message' => "%{SYSLOGTIMESTAMP:timestamp} %{HOSTNAME:host_target} sudo: pam_unix\(sudo:auth\): authentication failure; logname=%{USERNAME:logname} uid=%{BASE10NUM:uid} euid=%{BASE10NUM:euid} tty=%{TTY:tty} ruser=%{USERNAME:ruser} rhost=(?:%{HOSTNAME:remote_host}|\s*) user=%{USERNAME:user}"
      }
      add_tag => "sudo_auth_failure"
    }
    # if [syslog_pid] == 29754 {
    #   grok {
    #      match => { 'syslog_message' => 'pam_unix\(sudo:auth\): authentication failure; logname=%{USERNAME:logname} uid=%{BASE10NUM:uid} euid=%{BASE10NUM:euid} tty=%{TTY:tty} ruser=%{USERNAME:ruser} rhost=(?:%{HOSTNAME:remote_host}|\s*) user=%{USERNAME:user}' }
    #      add_tag => "ssh_brute_force_attack"
    #   }
    # }
  } #End if[type] == "auth"
  else if [type] == "Docker" {
    json {
      source => "message"
    }
  }
  else if [type] == "wineventlog" {
    json {
      source => "message"
    }
    # if [eventlog_id] == 4624 {
    #   mutate {
    #       add_tag => [ "ad-logon-success" ]
    #   }
    # }
    # if [eventlog_id] == 4634 {
    #   mutate {
    #       add_tag => [ "ad-logoff-success" ]
    #   }
    # }
    # if [eventlog_id] == 4771 or [eventlog_id] == 4625 or [eventlog_id] == 4769 {
    #   mutate {
    #       add_tag => [ "ad-logon-failure" ]
    #   }
    # }
    # if [eventlog_id] == 4723 {
    #   mutate {
    #       add_tag => [ "ad-password-change" ]
    #   }
    # }
    # if [eventlog_id] == 4724 {
    #   mutate {
    #       add_tag => [ "ad-password-reset" ]
    #   }
    # }
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "changeme"
  }
}
  # if  "sudo" in [message]  {
  #   if "" in [syslog_timestamp] {
  #     email {
  #       from => "bot@vertis.com"
  #       subject => "LOG ALERT %{host} %{syslog_timestamp}"
  #       to => "gabor.egyed@vertis.com"
  #       via => "smtp"
  #       body => "Here is the event line that occured: %{message}"
  #       address => "smtp.gmail.com"
  #       port => "587"
  #       username => "bot@vertis.com"
  #       password => "vbudeu*22ets"
  #       use_tls => "true"
  #     }
  #   }
  # }
