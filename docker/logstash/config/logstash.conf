input {
  beats {
    port => 5000
    ssl => true
    ssl_certificate_authorities => ["/.env-files/ca.crt"]
    ssl_certificate => "/certificate.crt"
    ssl_key => "/certificate.key"
    ssl_verify_mode => "force_peer"
  }
  udp {
    port => 514
    type => "switch"
  }
}

filter {
  if [type] == "sudo" {
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_PUB_LOGIN}"]
      add_tag => ["ssh_successful_login", "ssh_pub_login", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_PASSWORD_LOGIN}"]
      add_tag => ["ssh_successful_login", "ssh_password_login", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_FAILED_LOGIN}"]
      add_tag => ["ssh_failed_login", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_DISCONNECT}"]
      add_tag => ["ssh_disconnect", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SSH_SNOOPY}"]
      add_tag => ["ssh_snoopy", "ssh_parse"]
      remove_field => [ "@version", "input_type", "beat" ]
    }
    grok {
      patterns_dir => "/opt/patterns"
      match   => ["message", "%{SUDO}"]
      add_tag => ["sudo_command"]
      remove_field => [ "@version", "input_type", "beat" ]
    }


    if "ssh_parse" not in [tags] {
      grok {
        patterns_dir => "/opt/patterns"
        match   => ["message", "%{AUTH_LOG_LINE}"]
        remove_field => [ "@version", "input_type", "beat" ]
      }
    }

    mutate {
      remove_tag => ["ssh_parse", "_grokparsefailure"]
    }
  }
  else {
    json {
      source => "message"
      remove_field => [ "@version", "input_type", "beat" ]
    }
  }
  # if [type] == "cisco-asa" {
  #   mutate { remove_field => [ "host" ] }
  #   grok {
  #     patterns_dir => [ "/opt/patterns/" ]
  #     match => [
  #     "message", "%{CISCOFW110010}",
  #     "message", "%{CISCOFW302010}",
  #     "message", "%{CISCOFW302013_302014_302015_302016}",
  #     "message", "%{CISCOFW302020_302021}",
  #     "message", "%{CISCOFW305011}",
  #     "message", "%{CISCOFW313001_313004_313008}",
  #     "message", "%{CISCOFW313005}",
  #     "message", "%{CISCOFW402117}",
  #     "message", "%{CISCOFW402119}",
  #     "message", "%{CISCOFW419001}",
  #     "message", "%{CISCOFW419002}",
  #     "message", "%{CISCOFW500004}",
  #     "message", "%{CISCOFW602303_602304}",
  #     "message", "%{CISCOFW710001_710002_710003_710005_710006}",
  #     "message", "%{CISCOFW713172}",
  #     "message", "%{CISCOFW733100}"
  #     ]
  #     add_tag => ["cisco"]
  #   }
  # }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "changeme"
  }
}
